<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mysql on 后端笔记</title>
    <link>https://convee.github.io/tags/mysql/</link>
    <description>Recent content in mysql on 后端笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://convee.github.io/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mysql 创建用户与授权</title>
      <link>https://convee.github.io/post/mysql/grant/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://convee.github.io/post/mysql/grant/</guid>
      <description>创建用户 命令: CREATE USER &#39;username&#39;@&#39;host&#39; IDENTIFIED BY &#39;password&#39;; 说明：  username：用户名 host：用户可以登录的主机 password：用户登录密码，密码可以为空  例子： CREATE USER &#39;convee&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;123456&#39;; CREATE USER &#39;convee&#39;@&#39;192.168.0.1_&#39; IDENDIFIED BY &#39;123456&#39;; CREATE USER &#39;convee&#39;@&#39;192.168.%.%&#39; IDENTIFIED BY &#39;123456&#39;; CREATE USER &#39;convee&#39;@&#39;%&#39; IDENTIFIED BY &#39;123456&#39;; CREATE USER &#39;convee&#39;@&#39;%&#39;; 授权: 命令: GRANT privileges ON databasename.tablename TO &#39;username&#39;@&#39;host&#39; 说明:  privileges：用户的操作权限，如SELECT，INSERT，UPDATE等，如果要授予所的权限则使用ALL databasename：数据库名 tablename：表名，如果要授予该用户对所有数据库和表的相应操作权限则可用表示，如.*  例子: GRANT SELECT, INSERT ON test.user TO &#39;convee&#39;@&#39;%&#39;; GRANT ALL ON *.* TO &#39;convee&#39;@&#39;%&#39;; 注意:  用以上命令授权的用户不能给其它用户授权，如果想让该用户可以授权，用以下命令:  GRANT privileges ON databasename.</description>
    </item>
    
    <item>
      <title>Mysql 备份与恢复</title>
      <link>https://convee.github.io/post/mysql/backup/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://convee.github.io/post/mysql/backup/</guid>
      <description>恢复到指定数据库 mysql -hhostname -uusername -ppassword databasename &amp;lt; backup.sql 还原压缩的MySQL数据备份文件 gunzip &amp;lt; backup.sql.gz | mysql -uusername -ppassword databasename 直接将备份导入到新的数据库 mysqldump -uusername -ppassword databasename | mysql -host=192.168.0.1 -C databasename 使用source导入sql文件 mysql &amp;gt; use test mysql &amp;gt; source /data/test_backup.sql </description>
    </item>
    
  </channel>
</rss>
